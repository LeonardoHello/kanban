import { cookies } from "next/headers";
import { notFound } from "next/navigation";
import { createServerComponentClient } from "@supabase/auth-helpers-nextjs";
import Image from "next/image";
import GoBack from "@/components/GoBack";
import EditColumnField from "@/components/EditColumnField";
import BoardDeleteButton from "@/components/BoardDeleteButton";
import logo from "@/public/logo-mobile.svg";
import type { Metadata } from "next";

export const dynamic = "force-dynamic";

export const metadata: Metadata = {
	title: "Edit board | Kanban",
	description: "Generated by create next app",
};

type Params = {
	params: { boardId: string };
	searchParams: { error_message: string };
};

export default async function BoardEditPage({
	params: { boardId },
	searchParams: { error_message: errorMessage },
}: Params) {
	const supabase = createServerComponentClient<Database>({ cookies });

	const currentBoardQuery = supabase
		.from("boards")
		.select("name")
		.eq("id", boardId)
		.single();
	const columnsQuery = supabase
		.from("columns")
		.select("id, name")
		.eq("board_id", boardId)
		.order("created_at");

	const [currentBoard, columns] = await Promise.all([
		currentBoardQuery,
		columnsQuery,
	]);

	if (currentBoard.error) {
		if (
			currentBoard.error.code === "22P02" ||
			currentBoard.error.code === "PGRST116"
		) {
			notFound();
		}
		throw new Error(currentBoard.error.message);
	} else if (columns.error) {
		throw new Error(columns.error.message);
	}

	return (
		<div className="min-h-screen grid">
			<div className="flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8">
				<div className="relative sm:mx-auto sm:w-full sm:max-w-sm">
					<Image
						className="mx-auto h-8 w-auto"
						src={logo}
						alt="Your Company"
					/>
					<h2 className="mt-10 text-center text-2xl font-bold leading-9 tracking-tight">
						Edit Board
					</h2>
				</div>

				<div className="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">
					{errorMessage ? (
						<p className="text-red-500 text-center text-lg mb-4">
							{errorMessage}
						</p>
					) : null}
					<form
						action={`/api/board/${boardId}/edit`}
						method="post"
						autoComplete="off"
						className="space-y-6"
					>
						<GoBack />
						<div>
							<label
								htmlFor="name"
								className="block text-sm font-medium leading-6"
							>
								Name
							</label>
							<div className="mt-2">
								<input
									id="name"
									name="name"
									maxLength={30}
									pattern=".*\S.*"
									title="Field cannot be empty"
									defaultValue={currentBoard.data.name}
									required
									className="block w-full rounded-md border-0 py-1.5 bg-slate-800 shadow-sm ring-1 ring-inset ring-slate-700 placeholder:text-slate-400 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6"
								/>
							</div>
						</div>
						<div>
							<label
								htmlFor="columns"
								className="block text-sm font-medium leading-6"
							>
								Column
							</label>
							<EditColumnField columnData={columns.data} />
						</div>
						<div>
							<button
								type="submit"
								className="flex w-full justify-center rounded-md bg-indigo-500 px-3 py-1.5 mb-3 text-sm font-semibold leading-6 text-white shadow-sm transition-colors hover:bg-indigo-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-400"
							>
								Save Changes
							</button>
							<BoardDeleteButton boardId={boardId} />
						</div>
					</form>
				</div>
			</div>
		</div>
	);
}
